{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,EApCD,CACVQ,QAASC,SAASC,cAAc,SAChCC,YAAaF,SAASC,cAAc,kBAIlCF,QAAQI,iBAAiB,UAAWC,IACtCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOH,EAAEI,cAAcC,SAASlB,MAAMmB,OACvD,MAAMC,EAAYJ,OAAOH,EAAEI,cAAcC,SAASG,KAAKF,OACjDG,EAAcN,OAAOH,EAAEI,cAAcC,SAASK,OAAOJ,OAE3D,IAAI,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,GAAG,EAE9B1B,EAAc0B,EAAI,EAAGT,GACzBU,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEhE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAEzDe,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\n  formRef: document.querySelector(`.form`),\n  btSubmitRef: document.querySelector(`.form button`),\n}\n\n\nref.formRef.addEventListener(`submit`, (e) => {\n  e.preventDefault();\n  let delayValue = Number(e.currentTarget.elements.delay.value);\n  const stepValue = Number(e.currentTarget.elements.step.value);\n  const amountValue = Number(e.currentTarget.elements.amount.value);\n\n  for(let i = 0; i < amountValue; i+=1) {\n       \n       createPromise(i + 1, delayValue)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n       delayValue += stepValue;\n  }\n\n})\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  });\n  \n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","formRef","document","querySelector","btSubmitRef","addEventListener","e","preventDefault","delayValue","Number","currentTarget","elements","value","stepValue","step","amountValue","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1ac8b78e.js.map"}